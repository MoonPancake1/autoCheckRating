"""
Check my rate to HSU - –ú–æ–¥—É–ª—å –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –±–æ—Ç–µ
"""

START_MESSAGE = """
–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, –í–ª–∞–¥–∏—Å–ª–∞–≤!
"""

MENU_MESSAGE = """
–ö–∞–∫–æ–π –í–£–ó –ø—Ä–æ–≤–µ—Ä–∏—Ç—å?
"""

IN_DEVELOPMENT = """
–ö —Å–æ–∂–µ–ª–µ–Ω–∏—é, —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –≤–æ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:

1. *–í–£–ó* –ø–æ–∫–∞ –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–ª —Å–ø–∏—Å–∫–∏
2. *–í–£–ó* –µ—â—ë –Ω–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–ª –¥–æ–∫—É–º–µ–Ω—Ç—ã
3. *–§—É–Ω–∫—Ü–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏*
"""

FAILED_REQ_MESSAGE = """
–ö —Å–æ–∂–µ–ª–µ–Ω–∏—é, –≤–∞–º –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞, —Ç.–∫. –æ–Ω —Å–æ–∑–¥–∞–Ω –¥–ª—è —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞: @p1n0k10
"""

def generate_spbpu_message(data_parse: list):
    temp_answ = sorted(data_parse, key=lambda x: x[0])
    
    temp_answ = [f"*{data[0]}.* {data[2]}: *{data[1]}* –º–µ—Å—Ç–æ \n_–í—Å–µ–≥–æ_ *{data[3]}* _–º–µ—Å—Ç_. –ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª–ª: *{data[4]}*" \
        + ' üòé' if int(data[4]) < 242 else ' üò°'
                 for data in temp_answ]

    mirea_message = '\n\n'.join(temp_answ)
                
    return mirea_message


def generate_mirea_message(data_parse: list) -> str:
    
    temp_answ = sorted(data_parse, key=lambda x: x[0])
    
    temp_answ = [f"*{data[0]}.* {data[2]}: *{data[1]}* –º–µ—Å—Ç–æ \n_–í—Å–µ–≥–æ_ *{data[3]}* _–º–µ—Å—Ç_. –ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª–ª: *{data[4]}*" \
        + ' üòé' if int(data[4]) < 242 else ' üò°' 
                 for data in temp_answ]

    mirea_message = '\n\n'.join(temp_answ)
                
    return mirea_message


def generate_urfu_message(data_parse: list) -> str:
    
    temp_answ = sorted(data_parse, key=lambda x: x[0])
    
    temp_answ = [f"*{data[0]}.* {data[2]}: *{data[1]}* –º–µ—Å—Ç–æ (_–í—Å–µ–≥–æ_ *{data[3]}* _–º–µ—Å—Ç_)üî•" 
                 for data in temp_answ]

    urfu_message = '\n\n'.join(temp_answ)
                
    return urfu_message


if __name__ == '__main__':
    print(generate_spbpu_message())